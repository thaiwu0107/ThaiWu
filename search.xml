<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[LibGDX初次使用]]></title>
      <url>https://thaiwu0107.github.io/ThaiWu/ThaiWu/2016/08/31/LibGDX%E5%88%9D%E6%AC%A1%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<p>這次利用<strong><em><a href="https://libgdx.badlogicgames.com/download.html" target="_blank" rel="external">LibGDX</a></em></strong>來製作遊戲<br>點連結可以直接去官網下載製作架構的生產器<br>這是一個跨平台的遊戲框架</p>
<p>基礎是用<strong><em><a href="https://www.lwjgl.org/guide" target="_blank" rel="external">LWJGL</a></em></strong>來架構的框架<br>如果你想用JAVA來寫遊戲可以直接用LWJGL來寫<br>它幫你封裝好以下四大類</p>
<ul>
<li>GLFW</li>
<li>OpenGL</li>
<li>OpenCL</li>
<li>OpenAL<br>可以直接用JAVA來編譯不需要用C/C++來寫遊戲</li>
</ul>
<hr>
<p>LibGDX則是再進一步封裝好各平台的一個框架<br>一開始我只打算先用Android來寫<br>目前是用Firebase來試做一款多人連線遊戲<br>一開始還在想要用什麼來當伺服器<br>還有去研究過<strong><em><a href="https://github.com/EsotericSoftware/kryonet/releases" target="_blank" rel="external">Kryonet</a></em></strong></p>
<p>本來打算自己架一台JAVA伺服器的後來覺得可能會遇到非固定ＩＰ等等問題所以還是放棄以後再研究<br>還是乖乖使用Firebase吧</p>
<hr>
<p>過程中我一直在想怎麼利用Firebase來做多人連線<br>畢竟他主要是支援Android但是LibGDX生出來的架構<br>主要邏輯在core裡面</p>
<p>後來找到一篇<strong><em><a href="https://chandruscm.wordpress.com/2015/12/30/how-to-setup-google-play-game-services-in-libgdx-using-android-studio/" target="_blank" rel="external">文章</a></em></strong><br>才覺得自己蠢,其實就像他說的只要把<strong>reference</strong>傳過去就好<br>真的是第一次接觸都忘記了</p>
<p>看來一直寫Android也不是很好<br>還是要多接觸一點不一樣的東西才行啊</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[OpenCV相關]]></title>
      <url>https://thaiwu0107.github.io/ThaiWu/ThaiWu/2016/08/30/OpenCV%E7%9B%B8%E9%97%9C/</url>
      <content type="html"><![CDATA[<h3 id="什麼是OpenCV"><a href="#什麼是OpenCV" class="headerlink" title="什麼是OpenCV"></a>什麼是OpenCV</h3><p>OpenCV(Open Source Computer Vision Library)是一個集合數百種演算法的跨平台電腦視覺庫。只要是針對影像做辨識、操作、分析等，不管是要做人臉辨識、物件辨識、車牌辨識、人形偵測、物件追蹤、影像壓縮、影像加密等各種影像處理，OpenCV確實是一個很好的輔助工具，目前已經可以在Windows、Linux、iOS及Android平台上使用，支援的程式語言有C/C++、Java、Python、Matlab、Ruby及C#等，已經是大部分影像處理使用者必備的涵式庫了。</p>
<h3 id="模組-Module"><a href="#模組-Module" class="headerlink" title="模組 (Module)"></a>模組 (Module)</h3><p>####Main</p>
<ul>
<li>core. 基本資料結構的緊湊模組，包含操作影像像素及1.0與2.0版本格式交換</li>
<li>imgproc. 影像處理模組，包含線性與非線性的影像濾波器及幾何影像的轉換(影像縮放翻轉、色彩空間轉換和直方圖操作等)</li>
<li>imgcodecs. 影像格式編碼、解碼及影像存取</li>
<li>videoio. 攝影機操作</li>
<li>highgui. 提供簡易的視窗介面及鍵盤與滑鼠操作</li>
<li>video. 物件追蹤、背景相減及移動方向預估等</li>
<li>calib3d. 多視角幾何演算法，影像校正、3D物件重建及姿態估測等</li>
<li>features2d. 特徵擷取及特徵描述</li>
<li>objdetect. 物件偵測，如人臉偵測、眼睛偵測、嘴巴偵測、鼻子偵測及身形偵測等</li>
<li>ml. 機器學習演算法，如KNN、貝式機率分類器、SVM等</li>
<li>flann. 實現FLANN演算法</li>
<li>photo. 影像去雜訊、HDR</li>
<li>stitching. 影像合成相關技術</li>
<li>cudaarithm. 使用CUDA資料結構操作</li>
<li>cudabgsegm. 使用CUDA的背景相減MOG</li>
<li>cudacodec. 使用CUDA的影片存取讀取</li>
<li>cudafeatures2d. 使用CUDA實現部分特徵擷取技術</li>
</ul>
<p>####Extra</p>
<ul>
<li>aruco. ArUco Marker Detection</li>
<li>bgsegm. Improved Background-Foreground Segmentation Methods</li>
<li>bioinspired. Biologically inspired vision models and derivated tools</li>
<li>ccalib. Custom Calibration Pattern for 3D reconstruction</li>
<li>cvv. GUI for Interactive Visual Debugging of Computer Vision Programs</li>
<li>datasets. Framework for working with different datasets</li>
<li>dnn. Deep Neural Network module</li>
<li>dpm. Deformable Part-based Models</li>
<li>face. Face Recognition</li>
<li>fuzzy. Image processing based on fuzzy mathematics</li>
</ul>
<h3 id="Android使用"><a href="#Android使用" class="headerlink" title="Android使用"></a>Android使用</h3><p><strong><a href="https://sourceforge.net/projects/opencvlibrary/files/opencv-android/" target="_blank" rel="external">Android</a></strong>可以直接去這裡下載來使用<br><strong><a href="https://github.com/bytedeco/javacv" target="_blank" rel="external">JAVA</a></strong>純JAVA版本就可以引用這個庫來使用</p>
<p>使用心得與想法當然也是等到我真的有想做外掛的時候再分享囉<br>其實會紀錄這幾個有外掛的標籤都是當初朋友想叫我寫一個Android上面可以用的外掛APP</p>
<p>所以才去研究的不過研究到一個程度發現幾乎還是用<strong>ROOT</strong>手機才可以對Android環境直接下Shell指令才能做一些動作</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Sikuli相關技術]]></title>
      <url>https://thaiwu0107.github.io/ThaiWu/ThaiWu/2016/08/30/Sikuli%E7%9B%B8%E9%97%9C%E6%8A%80%E8%A1%93/</url>
      <content type="html"><![CDATA[<h3 id="什麼是Sikuli"><a href="#什麼是Sikuli" class="headerlink" title="什麼是Sikuli"></a>什麼是Sikuli</h3><p><a href="https://github.com/RaiMan/SikuliX2" target="_blank" rel="external">Sikuli</a> 是一種可視化技術，<br>它可以用來自動化的在一個圖形用戶界面（GUI）上進行操作和測試。<br>而Sikuli腳本就是實現這一過程的一種腳本語言。</p>
<p>它通過截圖來識別需要操作的圖形界面組件<br>再通 Jython 來完成操作動作從而實現自動化的操作（或者測試）.<br>說得簡單一點<br>Sikuli就是能通過截圖幫助我們自動操作電腦的一種便利的方式。</p>
<p>可以進入他的官網看他的<a href="http://sikulix.com/" target="_blank" rel="external">介紹</a></p>
<p>使用有一個GUI介面可以方便你使用<br>而且是圖形化介面來編寫語言非常的簡單<br><img src="http://www.sikuli.org/uploads/1/3/6/8/13689586/_3229151.png" alt="可以利用圖形來寫程式"></p>
<p>至於<strong>Android</strong>上如果要使用的話<br>就要另外再研究了<br>不過GitHub上有一個lib可以搜尋來試試看<br>至於要用這套寫出一個APP就要再研究了</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android OCR技術記錄]]></title>
      <url>https://thaiwu0107.github.io/ThaiWu/ThaiWu/2016/08/29/Android-OCR%E6%8A%80%E8%A1%93%E8%A8%98%E9%8C%84/</url>
      <content type="html"><![CDATA[<h2 id="什麼是OCR"><a href="#什麼是OCR" class="headerlink" title="什麼是OCR"></a>什麼是OCR</h2><p>OCR（全稱Optical Character Recognition），正式翻譯名為「光學字元識別」<br>講簡單點，它是可以辨識圖像上的文字，將之轉換為電子文字訊息</p>
<p>##工具<br><a href="https://github.com/tesseract-ocr/tesseract" target="_blank" rel="external">tesseract</a>是非常有名的開源OCR工具<br>而<strong>Android</strong>版本則是要用<a href="https://github.com/rmtheis/tess-two" target="_blank" rel="external">tess-two</a><br><strong>Android</strong>要用就很簡單<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">dependencies &#123;</div><div class="line">    compile &apos;com.rmtheis:tess-two:6.0.4&apos;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>即可下載部署到你的專案了<br>不過你還需要再下載<strong><em><a href="https://github.com/tesseract-ocr/tessdata" target="_blank" rel="external">語言包</a></em></strong><br>不需要全部下載,只要挑選你需要的語言就好了</p>
<p>至於開發重點與地雷就等之後再分享心得了</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo相關記錄]]></title>
      <url>https://thaiwu0107.github.io/ThaiWu/ThaiWu/2016/08/29/Hero%E7%9B%B8%E9%97%9C%E8%A8%98%E9%8C%84/</url>
      <content type="html"><![CDATA[<p>快速部署發布<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo d -g</div></pre></td></tr></table></figure></p>
<p>預覽<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo s</div></pre></td></tr></table></figure></p>
<p>建立一篇新的文章。如果沒有設定 layout 的話，則會使用 _config.yml 中的 default_layout 設定代替。如果標題包含空格的話，請使用引號括起來。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new [layout] &lt;title&gt;</div></pre></td></tr></table></figure></p>
<p>刪除步驟如下</p>
<p>至 \source_posts 底下找到要刪除的文章，並刪除<br>在 Hexo 的 Node Cmd 中執行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo clean</div></pre></td></tr></table></figure></p>
<p>刪掉根目錄下的 db.json</p>
<p>在 Hexo 的 Node Cmd 中執行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo g</div></pre></td></tr></table></figure></p>
<p>在 Hexo 的 Node Cmd 中執行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo d</div></pre></td></tr></table></figure></p>
<p><a href="https://hexo.io/zh-tw/docs/tag-plugins.html" target="_blank" rel="external">文章標籤</a><br>title: 標題<br>date: 時間自動產生<br>categories: 分類<br>tags: [tags,tags,tags]</p>
<blockquote><p><a href="https://hexo.io/zh-tw/docs/tag-plugins.html" target="_blank" rel="external">https://hexo.io/zh-tw/docs/tag-plugins.html</a></p>
</blockquote>]]></content>
    </entry>
    
  
  
</search>
